{"version":3,"sources":["webpack:///webpack/bootstrap 7c1f9d85085561becac1","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./src/components/Chatbot.tsx","webpack:///./src/Jaccard.ts","webpack:///./src/Set.ts","webpack:///./src/ShingleBased.ts","webpack:///./src/Map.ts","webpack:///./src/components/ChatConversation.tsx","webpack:///./src/LinkedGraph.ts","webpack:///./src/Knot.ts","webpack:///./src/GraphConfig.ts"],"names":[],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c1f9d85085561becac1","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport Chatbot from \"./components/Chatbot\";\r\nimport ChatConversation from \"./components/ChatConversation\";\r\n\r\nReactDOM.render(\r\n    <Chatbot conversations={[]}/>,\r\n    document.getElementById(\"example\")\r\n);\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 2\n// module chunks = 0","import * as React from \"react\";\r\nimport ChatConversation from \"./ChatConversation\";\r\nimport graph from \"../GraphConfig\";\r\n\r\ninterface IChatbot {\r\n    conversations : Array<ChatConversation>\r\n}\r\n\r\nexport default class Chatbot extends React.Component<IChatbot, {}> {\r\n\r\n    private inputElement : HTMLInputElement;\r\n\r\n    state : {\r\n        conversations : Array<ChatConversation>   \r\n    }\r\n\r\n    constructor(props:IChatbot) {\r\n        super(props);\r\n        this.state = {\r\n            conversations : new Array<ChatConversation>()\r\n        }\r\n\r\n        graph.setOutputStream(this.printer.bind(this));\r\n    }\r\n\r\n    handleOnKeyDown(e:KeyboardEventInit) {\r\n\r\n        if (e.key === 'Enter') {\r\n            let who = \"Me\";\r\n            let what = this.inputElement.value;\r\n            this.inputElement.value = \"\";\r\n\r\n            let c = new ChatConversation({who:who, what:what});\r\n            let self = this;\r\n            this.setState((prevState : IChatbot, props : IChatbot) => {\r\n                prevState.conversations.push(c);\r\n                return prevState;\r\n            });\r\n\r\n            graph.tryNavigateUsing(what);\r\n        }\r\n    }\r\n\r\n    printer(input:string) {\r\n        let who = \"Watson\";\r\n        let what = input.toString();\r\n\r\n        let c = new ChatConversation({who:who, what:what});\r\n        let self = this;\r\n        this.setState((prevState : IChatbot, props : IChatbot) => {\r\n            prevState.conversations.push(c);\r\n            return prevState;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputElement = document.getElementById(\"inputElement\") as HTMLInputElement;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul >\r\n                    {\r\n                        this.state.conversations.map((c, i) => {\r\n                            return <ChatConversation key={i} who={c.props.who} what={c.props.what} />\r\n                        })\r\n                    }\r\n                </ul>\r\n                <input type=\"text\" id=\"inputElement\" onKeyDown={this.handleOnKeyDown.bind(this)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/Chatbot.tsx","import Map from \"./Map\";\r\nimport Set from \"./Set\";\r\nimport ShingleBased from \"./ShingleBased\";\r\n\r\n\r\nclass Jaccard extends ShingleBased{\r\n\r\n    /**\r\n     * The strings are first transformed into sets of k-shingles (sequences of k\r\n     * characters), then Jaccard index is computed as |A inter B| / |A union B|.\r\n     * The default value of k is 3.\r\n     *\r\n     * @param k\r\n     */\r\n    constructor(k : number) {\r\n        super(k);\r\n    }\r\n\r\n    /**\r\n     * Compute jaccard index: |A inter B| / |A union B|.\r\n     * @param s1\r\n     * @param s2\r\n     * @return\r\n     */\r\n    public similarity(s1 : string, s2 : string) : number{\r\n        let profile1 : Map<number> = this.getProfile(s1);\r\n        let profile2 : Map<number> = this.getProfile(s2);\r\n\r\n        let union : Set = new Set();\r\n        union.addAll(profile1.getKeys());\r\n        union.addAll(profile2.getKeys());\r\n\r\n\r\n        let inter = 0;\r\n        \r\n        union.forEach( (key : string) => {\r\n            if (profile1.contains(key) && profile2.contains(key)) {\r\n                inter++;                \r\n            }\r\n        });\r\n\r\n        return 1.0 * inter / union.size();\r\n    }\r\n\r\n\r\n    /**\r\n     * Distance is computed as 1 - similarity.\r\n     * @param s1\r\n     * @param s2\r\n     * @return\r\n     */\r\n    public distance(s1 : string, s2 : string) {\r\n        return 1.0 - this.similarity(s1, s2);\r\n    }\r\n}\r\n\r\nexport default Jaccard;\n\n\n// WEBPACK FOOTER //\n// ./src/Jaccard.ts","\r\nclass Set {\r\n    private hash : {[key:string] : boolean}; \r\n\r\n    constructor() {\r\n        this.hash = {};\r\n    }\r\n\r\n    public contains(key : string) : boolean{\r\n        return !!this.hash[key];\r\n    }\r\n\r\n    public addAll(keys : any[]) {\r\n        keys.forEach(this.add.bind(this));\r\n    }\r\n\r\n    public add(key : any) {\r\n        this.hash[key] = true;\r\n    }\r\n\r\n    public remove(key : any) {\r\n        delete this.hash[key];\r\n    }\r\n\r\n    public forEach(runCallback:Function) {\r\n\r\n        for (let key of Object.keys(this.hash)) {\r\n            runCallback(key);\r\n        }\r\n    }\r\n\r\n    public size() : number {\r\n        return Object.keys(this.hash).length;\r\n    }\r\n}\r\n\r\nexport default Set;\n\n\n// WEBPACK FOOTER //\n// ./src/Set.ts","import Map from \"./Map\";\r\n\r\nabstract class ShingleBased {\r\n\r\n    protected static DEFAULT_K = 3;\r\n\r\n    private k : number;\r\n\r\n    /**\r\n     * Pattern for finding multiple following spaces.\r\n     */\r\n    private static SPACE_REG = new RegExp(/\\s+/);\r\n\r\n    /**\r\n     *\r\n     * @param k\r\n     */\r\n    constructor(k : number) {\r\n        if (k <= 0) {\r\n            throw new Error(\"k should be positive!\");\r\n        }\r\n        this.k = k;\r\n    }\r\n\r\n    /**\r\n     * Return k, the length of k-shingles (aka n-grams).\r\n     *\r\n     * @return\r\n     */\r\n    public getK() : number {\r\n        return this.k;\r\n    }\r\n\r\n    /**\r\n     * Compute and return the profile of s, as defined by Ukkonen \"Approximate\r\n     * string-matching with q-grams and maximal matches\".\r\n     * https://www.cs.helsinki.fi/u/ukkonen/TCS92.pdf\r\n     * The profile is the number of occurrences of k-shingles, and is used to\r\n     * compute q-gram similarity, Jaccard index, etc.\r\n     * Pay attention: the memory requirement of the profile can be up to\r\n     * k * size of the string\r\n     *\r\n     * @param string\r\n     * @return the profile of this string, as an unmodifiable Map\r\n     */\r\n    public getProfile(fullString : string) : Map<number>{\r\n        \r\n        let shingles : Map<number> = new Map<number>();\r\n\r\n        let string_no_space = fullString.replace(ShingleBased.SPACE_REG, \" \");\r\n        for (let i = 0; i < (string_no_space.length - this.k + 1); i++) {\r\n            let shingle = string_no_space.substring(i, i + this.k);\r\n            let value = shingles.contains(shingle) ? shingles.getValue(shingle) + 1 : 1;            \r\n            shingles.setValue(shingle, value);\r\n        }\r\n        \r\n        return shingles;\r\n    }\r\n\r\n}\r\n\r\nexport default ShingleBased;\n\n\n// WEBPACK FOOTER //\n// ./src/ShingleBased.ts","class Map<V> {\r\n\r\n    private obj : {[key:string]:V}\r\n\r\n    constructor() {\r\n        this.obj = {};\r\n    }\r\n\r\n    public contains(key:string) : boolean {\r\n        return !!this.obj[key];\r\n    }\r\n\r\n    public setValue(key:string, value:V) {\r\n        this.obj[key] = value;\r\n    }\r\n\r\n    public getValue(key:string) {\r\n        return this.obj[key];\r\n    }\r\n\r\n    public getKeys() : string[] {\r\n        return Object.keys(this.obj);\r\n    }\r\n}\r\n\r\nexport default Map;\n\n\n// WEBPACK FOOTER //\n// ./src/Map.ts","import * as React from \"react\";\r\n\r\nexport interface IConversation {\r\n    who:string;\r\n    what:string;\r\n}\r\n\r\nexport default class ChatConversation extends React.Component<IConversation, {}> {\r\n\r\n    render() {\r\n        return (\r\n            <li>\r\n                <b>{this.props.who}</b> says: <span>{this.props.what}</span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ChatConversation.tsx","import Knot from \"./Knot\";\r\n\r\nexport default class LinkedGraph {\r\n\r\n    private static SIMILARITY_THRESHOLD = 0.6;\r\n    private static ADDITION_SIMILARITY_THRESHOLD = 0.85;\r\n    private static errorMessages : string[] = [\r\n        \"I didn't undertood what you want!\",\r\n        \"No good command specified!\",\r\n        \"Some error occurred on processing your request!\"\r\n    ]\r\n\r\n\r\n    private knots : {[key:string] : Knot} = {};\r\n    private currentKnot : Knot;\r\n    private rootKnot : Knot;\r\n    private outStream : Function;\r\n\r\n    constructor(root:Knot) {\r\n        this.rootKnot = this.currentKnot = this.knots[root.name] = root;\r\n    }\r\n\r\n    public tryLinkKnotsViaWith(origin:Knot, via:string, threshold:number, destiny:Knot) : boolean {\r\n\r\n        try {\r\n            // set knot to the knots if it not exists\r\n            let originKnot = this.knots[origin.name] = this.knots[origin.name] || origin;\r\n            let destinyKnot = this.knots[destiny.name] = this.knots[destiny.name] || destiny;\r\n            if (originKnot && destinyKnot) {\r\n                return originKnot.tryAddChildViaWith(via, threshold, destinyKnot);\r\n            }\r\n            else throw new Error(\"Knots already linked via this edge\");\r\n        }\r\n        catch(e) {\r\n            // knot not found or already linked\r\n            console.error(e.message);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @description Try to navigate to new knot on the knots\r\n     */\r\n    public tryNavigateUsing(input:string) : boolean {\r\n\r\n        try {\r\n            let possiblesDestinations = this.currentKnot.getChildrenSortedVia(input);\r\n            if (possiblesDestinations.length > 0) {\r\n                let futureKnot = possiblesDestinations[0]; // most significant\r\n\r\n                // add via new path\r\n                if (futureKnot.getCurrentSimilarity() > LinkedGraph.ADDITION_SIMILARITY_THRESHOLD) {\r\n                    let meanThreshold = this.currentKnot.getMeanThreshold();\r\n                    this.tryLinkKnotsViaWith(this.currentKnot, input, meanThreshold, futureKnot);\r\n                }\r\n\r\n                // keep current state\r\n                if (!this.currentKnot.equals(futureKnot)){                    \r\n                    this.currentKnot = futureKnot;\r\n                }\r\n\r\n                // only navigate after assignment!\r\n                futureKnot.navigateToItWith(input, this, this.outStream);\r\n                return true;\r\n            }\r\n            else throw LinkedGraph.getRandonErrorMessage();\r\n        }\r\n        catch(e) {\r\n            this.sendRequestToOutputStream(e);\r\n            this.currentKnot.failWith(input, this);\r\n        }    \r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Backtrack\r\n     */\r\n    public goToLastKnot() {\r\n        if (this.currentKnot.hasParent()) {\r\n            this.currentKnot = this.currentKnot.getParent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Go to root knot\r\n     */\r\n    public goToRoot() {\r\n        this.currentKnot = this.getRoot();\r\n    }\r\n\r\n    /**\r\n     * @description Get current knot on navigation\r\n     */\r\n    public getCurrentKnot() : Knot {\r\n        return this.currentKnot;\r\n    }\r\n\r\n    /**\r\n     * @description set output stream to use comunicate with outside with internal messages\r\n     */\r\n    public setOutputStream(outStream:Function) {\r\n        this.outStream = outStream;\r\n    }\r\n\r\n    /**\r\n     * @description Get root knot\r\n     */\r\n    private getRoot() : Knot {\r\n        return this.rootKnot;\r\n    }\r\n\r\n    /**\r\n     * @description send a request to output stream\r\n     */\r\n    private sendRequestToOutputStream(buffer:any) {\r\n        if (!!this.outStream) {\r\n            this.outStream(buffer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description get some randon error message\r\n     */\r\n    private static getRandonErrorMessage() : string {\r\n        let randMsgIndex = Math.floor(Math.random() * LinkedGraph.errorMessages.length);\r\n        return LinkedGraph.errorMessages[randMsgIndex];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/LinkedGraph.ts","import LinkedGraph from \"./LinkedGraph\";\r\nimport Jaccard from \"./Jaccard\";\r\n\r\nlet jaccard = new Jaccard(1);\r\n\r\nexport default class Knot {\r\n\r\n    public name : string;\r\n    private parent : Knot;\r\n    private edges : {[key:string] : {edge:Knot, threshold : number}} = {}; \r\n    private currentSimilarity : number;\r\n    private minSimilarity : number;\r\n    private templates : Array<string> = new Array<string>();\r\n    private onentryCommand : Function;\r\n    private onfailcommand : Function;\r\n    \r\n    constructor(name:string) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * @description Try add child via some command\r\n     * @param via\r\n     * @param child\r\n     * @return boolean returns if child was added or not\r\n     */\r\n    public tryAddChildViaWith(via:string, threshold:number, knot:Knot) : boolean {\r\n\r\n        let child = this.edges[via];\r\n\r\n        // add child\r\n        if (child === null || child === undefined) {\r\n\r\n            this.edges[via] = {\r\n                edge : knot,\r\n                threshold : threshold\r\n            };\r\n            knot.setParent(this);\r\n            return true;\r\n        }\r\n        // do nothing\r\n        \r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @description Get children sorted by similarity with input\r\n     * @param input\r\n     * @return Knot array sorted\r\n     */\r\n    public getChildrenSortedVia(input:string) : Knot[] {\r\n\r\n        let children = new Array<Knot>();\r\n\r\n        for(let via in this.edges) {\r\n            let knot = this.edges[via]\r\n            knot.edge.currentSimilarity = jaccard.similarity(input, via);\r\n            if (knot.edge.currentSimilarity >= knot.threshold) {\r\n                children.push(knot.edge);\r\n            }\r\n        }\r\n\r\n        children.sort( (a, b) => {\r\n            return b.getCurrentSimilarity() - a.getCurrentSimilarity();\r\n        });\r\n\r\n\r\n        return children;\r\n    }\r\n\r\n    /**\r\n     * @description get mean threshold of transition to children\r\n     */\r\n    public getMeanThreshold() : number {\r\n        let count = 0;\r\n        let sum = 0;\r\n        for(let via in this.edges) {\r\n            let knot = this.edges[via]\r\n            sum += knot.threshold;\r\n            count++;\r\n        }\r\n\r\n        return sum / count;\r\n    }\r\n\r\n    /**\r\n     * @description Get currentSimilarity\r\n     */\r\n    public getCurrentSimilarity() : number {\r\n        return this.currentSimilarity;\r\n    }\r\n\r\n    /**\r\n     * @description Try to add a template response\r\n     */\r\n    public tryAddTemplate(template:string) : boolean {\r\n        if (this.templates.indexOf(template) < 0) {\r\n            this.templates.push(template);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @description Add multiples templates\r\n     */\r\n    public addTemplates(templates:Array<string>) {\r\n        templates.forEach(template => this.tryAddTemplate(template));\r\n    }\r\n\r\n    /**\r\n     * @description Returns one of the pushed templates\r\n     */\r\n    public getRandomTemplate() : string {\r\n        let randIndex = Math.floor(Math.random() * this.templates.length);\r\n        return this.templates[randIndex];\r\n    }\r\n\r\n    /**\r\n     * @description Set on entry command\r\n     */\r\n    public onEntry(command:Function) {\r\n        this.onentryCommand = command;\r\n    }\r\n\r\n    /**\r\n     * @description Navigate to it\r\n     */\r\n    public navigateToItWith(input:string, graph : LinkedGraph, printer:Function) {\r\n        if (this.onentryCommand)\r\n            this.onentryCommand(input, this, graph, printer);\r\n    }\r\n\r\n    /**\r\n     * @description set function on fail entering this knot\r\n     */\r\n    public onFail(command:Function) {\r\n        this.onfailcommand = command;\r\n    }\r\n\r\n    public failWith(input:string, graph : LinkedGraph) {\r\n        if (this.onfailcommand)\r\n            this.onfailcommand(input, this, graph);\r\n    }\r\n\r\n    /**\r\n     * @description set parent\r\n     */\r\n    public setParent(parent:Knot) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    /**\r\n     * @description get parent\r\n     */\r\n    public getParent() : Knot{\r\n        return this.parent;\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     */\r\n    public hasParent() : boolean {\r\n        return !!this.parent;\r\n    }\r\n\r\n    /**\r\n     * @description Test equality\r\n     */\r\n    public equals(other:Knot) : boolean {\r\n        return this.name === other.name;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Knot.ts","import LinkedGraph from \"./LinkedGraph\";\r\nimport Knot from \"./Knot\";\r\nimport SpeechSynthesizer from \"./SpeechSynthesizer\";\r\n\r\nlet printer = console.log || null;\r\n\r\nclass String {\r\n\r\n    public static formatHour(hours:number, minutes:number) : string {\r\n        let minutesString = (minutes <= 9 ? \"0\" : \"\") + minutes.toString();\r\n        let hoursString = (hours <= 9? \"0\" : \"\") + hours.toString();\r\n        return hoursString + \":\" + minutesString;   \r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////\r\n///     SHOULD BE IN ANOTHER PLACE TO SETUP //\r\n//////////////////////////////////////////////\r\nlet rootKnot = new Knot(\"HCIH?\")\r\nrootKnot.tryAddTemplate(\"How can i help?\");\r\nrootKnot.tryAddTemplate(\"What can i do for you?\");\r\nrootKnot.onEntry( (input:string, self:Knot, graph:LinkedGraph, printer:Function) => {\r\n    let currentTemplate = self.getRandomTemplate();\r\n    printer(currentTemplate);\r\n});\r\n\r\nlet timeResKnot = new Knot(\"WTIIT?\");\r\ntimeResKnot.tryAddTemplate(\"It's <TIME>\");\r\ntimeResKnot.tryAddTemplate(\"<TIME>\");\r\ntimeResKnot.onEntry( (input:string, self:Knot, graph:LinkedGraph, printer:Function) => {\r\n    let template = self.getRandomTemplate();\r\n    let date = new Date();\r\n    let HHMM = String.formatHour(date.getHours(), date.getMinutes());\r\n    let response = template.replace(\"<TIME>\", HHMM);\r\n    printer(response);\r\n    graph.goToLastKnot();\r\n});\r\n\r\nlet kindKnot = new Knot(\"WAYMF?\");\r\nlet kindKnotTArray = [\"I'm good stupid, machine remember? And you?\", \"good. And How are you?\", \"Awsome. And you?\", \"Umbelievable Awsome. And you?\"];\r\nkindKnot.addTemplates(kindKnotTArray);\r\nkindKnot.onEntry( (input:string, self:Knot, graph:LinkedGraph, printer:Function) => {\r\n    let template = self.getRandomTemplate();\r\n    printer(template);\r\n});\r\n\r\nlet kindResponseKnot = new Knot(\"KRFUR\");\r\nlet oksTemplates = [\"Ok! Let's go to another command!\", \"Ok!\",\"Ok! Let's do something intersting...\"];\r\nkindResponseKnot.addTemplates(oksTemplates);\r\nkindResponseKnot.onEntry( (input:string, self:Knot, graph:LinkedGraph, printer:Function) => {\r\n    let template = self.getRandomTemplate();\r\n    printer(template);\r\n    graph.goToRoot();\r\n});\r\n\r\n\r\n//////////////////////////////////////////////\r\n\r\n\r\nconst graph = new LinkedGraph(rootKnot);\r\ngraph.tryLinkKnotsViaWith(rootKnot, \"what time it it?\", 0.6, timeResKnot);\r\ngraph.tryLinkKnotsViaWith(timeResKnot, \"Return to beginning\", 0.8, rootKnot);\r\ngraph.tryLinkKnotsViaWith(rootKnot, \"How are you?\", 0.7, kindKnot);\r\ngraph.tryLinkKnotsViaWith(rootKnot, \"Are you good?\", 0.7, kindKnot);\r\ngraph.tryLinkKnotsViaWith(kindKnot, \"fine thanks\", 0.7, kindResponseKnot);\r\ngraph.tryLinkKnotsViaWith(kindKnot, \"i'm ok today, thanks!\", 0.7, kindResponseKnot);\r\ngraph.tryLinkKnotsViaWith(kindKnot, \"awsome, thanks!\", 0.7, kindResponseKnot);\r\ngraph.tryLinkKnotsViaWith(kindKnot, \"thank you for asking. im good\", 0.7, kindResponseKnot);\r\n\r\n\r\n\r\nexport default graph;\n\n\n// WEBPACK FOOTER //\n// ./src/GraphConfig.ts"],"sourceRoot":""}